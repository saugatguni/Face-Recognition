from imutils import paths
import face_recognition
import argparse
import pickle
import cv2
import os

#TO construct argument parser and parse the argument
ap=argparse.ArgumentParser()
ap.add_argument("-i", "--dataset", required=True,
                help="path to input directory of faces and images")
ap.add_argument("-e", "--endcodings", required= True,
                help="path to serialized db of facial encodings")
ap.add_argument("-d", "--detection-method", type=str, default="cnn",
                help="face detection method to use: either hog or cnn")
args=vars(ap.parse_args())


#Now we have to grab the path to files in our dataset
print("[INFO] Quantifying Faces")
imagePaths= list(paths.list_images(args["dataset"]))

#We also have to initialize the list of known encoding and their corresponding names
knownEncodings=[]
knownNames=[]

for (i, imagePath) in enumerate(imagePaths): #here i will hold the index and imagePath will hold the corresponding image path generated by enumerate as (0, img1), (1, img2)
    #extract the person name from image path
    print("[INFO] processing image {}/{}".format(i+1, len(imagePaths)))
    name=imagePath.split(os.path.sep)[-2]

    #load the input image and convert it from BGR(opencv ordering) to RGB(dlib ordering)
    image=cv2.imread(imagePath)
    rgb=cv2.cvtColor(image, cv2.COLOR_BGR2RGB)


#detect the (x, y) coordinates of the bounding boxes correspoding to each face in the input images
boxes=face_recognition.face_locations(rgb, model=args["detection_method"])

#Now compute the facial embedding for the face
encodings=